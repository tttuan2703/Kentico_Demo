@model DancingGoat.Models.ProductViewModel

@{
    ViewData["PageClass"] = "inverted";

    var horsepower = Model.Horsepower;
    var operatingWeight = Model.OperatingWeight;
    var bladeCapacity = Model.BladeCapacity;
}

<article class="product-detail">
    <div class="row">
        <div class="col-md-12">
            <div class="product-detail-header">
                <span>Small dozer</span>
                <h3 class="bold">@Model.Name</h3>
            </div>
        </div>
    </div>
    <div class="row-fluid">
        <div class="col-md-6 col-lg-6">
            <ul>
                @if (!string.IsNullOrEmpty(horsepower))
                {
                    <li>
                        <span>Horsepower: <mp> @horsepower</span>
                        <div class="hr"></div>
                    </li>
                }
                @if (!string.IsNullOrEmpty(operatingWeight))
                {
                    <li>
                        <span>Operating Weight: <mp> @operatingWeight</span>
                        <div class="hr"></div>
                    </li>
                }
                @if (!string.IsNullOrEmpty(bladeCapacity))
                {
                    <li>
                        <span>Blade Capacity: <mp> @bladeCapacity</span>
                        <div class="hr"></div>
                    </li>
                }
            </ul>
            <div class="description">
                @Html.Raw(Model.Description)
                @if (Model.TypedProduct != null)
                {
                    @Html.DisplayFor(m => m.TypedProduct, Model.TypedProduct.GetType().Name)
                }
            </div>
            <div class="product-price">
                <div class="cart-item-selector-container">
                    <div class="stock-container">
                        @if (Model.IsInStock)
                        {
                            <span id="stockMessage" class="stock available">@HtmlLocalizer["In stock"]</span>
                        }
                        else
                        {
                            <span id="stockMessage" class="stock unavailable">@HtmlLocalizer["Out of stock"]</span>
                        }
                    </div>
                </div>
                <form method="post">
                    <partial name="_PriceDetails" />
                    @*<partial name="_VariantSelector" />*@
                    <div class="total-price-container">
                        <span class="total-price-label">@HtmlLocalizer["Total"]</span>
                        <span id="totalPrice" class="total-price">@(string.Format(Model.PriceDetail.Currency.CurrencyFormatString, Model.PriceDetail.Price))</span>
                    </div>
                    <div class="add-to-cart-container">
                        <input type="hidden" id="selectedVariantID" name="SKUID" value="@(Model.SelectedVariantID > 0 ? Model.SelectedVariantID : Model.SKUID)" />
                        <input type="hidden" id="js-parent-product-id" name="ParentSKUID" value="@(Model.SKUID)" />
                        <label class="units-label">Qty</label>
                        <input type="number" name="Units" value="1" class="add-to-cart-textbox" />
                        <input type="submit" asp-controller="Checkout" asp-action="AddItem" id="js-submit-add-to-cart" value="Add to cart" class="btn btn-primary add-to-cart-button @(Model.AllowSale ? "" : "btn-disabled")" disabled="@(!Model.AllowSale)" />
                    </div>
                </form>
            </div>
        </div>
        <div class="col-md-6 col-lg-6">
            @if (!string.IsNullOrEmpty(Model.ImagePath))
            {
                <figure class="product-detail-image">
                    <img src="@Model.ImagePath" alt="@Model.Name" title="@Model.Name" />
                </figure>
            }
        </div>
    </div>
</article>

@section Scripts{
    <script src="~/Scripts/variantSelector.js"></script>
}