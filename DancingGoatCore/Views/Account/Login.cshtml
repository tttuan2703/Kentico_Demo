@model DancingGoat.Models.LoginViewModel

@{
    ViewBag.Title = HtmlLocalizer["Sign in"].Value;
    ViewData["PageClass"] = "inverted";
}

<div class="signin-register">
    <div class="col-md-10 col-lg-10 zone-light zone-login">
        <div class="login-container row">
            <div class="col-md-10 col-lg-10 col-lg-offset-3 col-md-offset-3">
                <h2>@HtmlLocalizer["Welcome Komatsu!"]</h2>
                <div class="separator"></div>
                <div class="form-group-input">
                    <div class="logon-page-background">
                        <div class="logon-panel">
                            <form asp-action="Login" method="post" asp-route-returnUrl="@Context.Request.Query["ReturnUrl"]">
                                <div class="form-horizontal">
                                    @if (ViewData.ModelState.Any(x => x.Value.Errors.Any()))
                                    {
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    }
                                    <div class="form-group">
                                        <div class="editing-form-label-cell">
                                            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label" })
                                        </div>
                                        <div class="editing-form-value-cell">
                                            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="editing-form-label-cell">
                                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
                                        </div>
                                        <div class="editing-form-value-cell">
                                            @Html.PasswordFor(model => model.Password, htmlAttributes: new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <span class="logon-remember-me-checkbox checkbox">@Html.EditorFor(model => model.StaySignedIn) @Html.LabelFor(model => model.StaySignedIn)</span>
                                <input type="submit" value="@HtmlLocalizer["Sign in"]" class="btn btn-primary" />
                            </form>
                        </div>

                        <div class="col-md-4 col-lg-4">
                            <a asp-controller="Account" asp-action="RetrievePassword" class="logon-password-retrieval-link">
                               @*data-ajax="true" data-ajax-mode="replace" data-ajax-update="#retrievePasswordWrap">*@
                                @HtmlLocalizer["Forgotten password"]
                            </a>
                        </div>


                        <div class="col-md-4 col-lg-4">
                            <a asp-controller="Account" asp-action="Register" class="logon-password-retrieval-link">
                                <span>@HtmlLocalizer["Not a member? "]</span>
                                @HtmlLocalizer["Register Now"]
                            </a>
                        </div>

                        <div id="retrievePasswordWrap">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
