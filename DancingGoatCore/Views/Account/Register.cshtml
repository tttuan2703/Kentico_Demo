@model DancingGoat.Models.RegisterViewModel

@{
    ViewBag.Title = HtmlLocalizer["Register"].Value;
    ViewData["PageClass"] = "inverted";

    var isSuccessfulRegistration = (Model != null && (Model?.IsSuccessfulRegistration == true));
}

<div class="signin-register register-container">
    <div class="row">
        <div class="col-md-10 col-lg-10 zone-light zone-login">
            <div class="login-container row">
                <div class="col-md-10 col-lg-10 col-lg-offset-3 col-md-offset-3">
                    <h2>@HtmlLocalizer["Register Account"]</h2>
                    <p>@HtmlLocalizer["Please provide the information requested below so that we can register and verify your account."]</p>
                    <div class="separator"></div>
                    <div class="form-group-input">
                        <div class="logon-page-background">
                            <div class="logon-panel">
                                @if (!isSuccessfulRegistration)
                                {
                                    <form asp-action="Register" method="post">
                                        <div class="form-horizontal">
                                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                            <div class="form-group">
                                                <div class="editing-form-label-cell">
                                                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
                                                </div>
                                                <div class="editing-form-value-cell">
                                                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                <div class="editing-form-label-cell">
                                                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
                                                </div>
                                                <div class="editing-form-value-cell">
                                                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                <div class="editing-form-label-cell">
                                                    @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label" })
                                                </div>
                                                <div class="editing-form-value-cell">
                                                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                <div class="editing-form-label-cell">
                                                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
                                                </div>
                                                <div class="editing-form-value-cell">
                                                    @Html.PasswordFor(model => model.Password, htmlAttributes: new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                <div class="editing-form-label-cell">
                                                    @Html.LabelFor(model => model.PasswordConfirmation, htmlAttributes: new { @class = "control-label" })
                                                </div>
                                                <div class="editing-form-value-cell">
                                                    @Html.PasswordFor(model => model.PasswordConfirmation, htmlAttributes: new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.PasswordConfirmation, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <input type="submit" value="@HtmlLocalizer["Register"]" class="btn btn-primary" />
                                        </div>
                                    </form>
                                }
                                else
                                {
                                    <div class="row">
                                        <h3 class="text-danger">@HtmlLocalizer["Your account has been successfully created!"]</h3>
                                        <br>
                                        <a asp-controller="Account" asp-action="Login" class="btn btn-secondary btn-default">
                                            @HtmlLocalizer["Go to Login Page"]
                                        </a>
                                    </div>
                                }
                            </div>
                            @if (!isSuccessfulRegistration)
                            {
                                <div class="col-md-4 col-lg-4">
                                </div>
                                <div class="col-md-4 col-lg-4">
                                    <a asp-controller="Account" asp-action="Login" class="logon-password-retrieval-link">
                                        <span>@HtmlLocalizer["Already a member? "]</span>
                                        @HtmlLocalizer["Sign In"]
                                    </a>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
        @*<div class="col-md-6 zone-light">
        <h2>@HtmlLocalizer["Already have an account?"]</h2>
        @Html.ActionLink(HtmlLocalizer["Sign in"].Value, "Login", null, new { @class = "btn btn-secondary btn-default" })
        </div>*@
    </div>
</div>
