//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at https://docs.xperience.io/.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine;
using CMS.DocumentEngine.Types.KomatsuDemo;

[assembly: RegisterDocumentType(Product.CLASS_NAME, typeof(Product))]

namespace CMS.DocumentEngine.Types.KomatsuDemo
{
	/// <summary>
	/// Represents a content item of type Product.
	/// </summary>
	public partial class Product : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "KomatsuDemo.Product";


		/// <summary>
		/// The instance of the class that provides extended API for working with Product fields.
		/// </summary>
		private readonly ProductFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// CafeID.
		/// </summary>
		[DatabaseIDField]
		public int ProductID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("ProductID"), 0);
			}
			set
			{
				SetValue("ProductID", value);
			}
		}


		/// <summary>
		/// Name.
		/// </summary>
		[DatabaseField]
		public string ProductName
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ProductName"), @"");
			}
			set
			{
				SetValue("ProductName", value);
			}
		}


		/// <summary>
		/// Company Name.
		/// </summary>
		[DatabaseField]
		public string CompanyName
		{
			get
			{
				return ValidationHelper.GetString(GetValue("CompanyName"), @"");
			}
			set
			{
				SetValue("CompanyName", value);
			}
		}


		/// <summary>
		/// Street.
		/// </summary>
		[DatabaseField]
		public string CompanyStreet
		{
			get
			{
				return ValidationHelper.GetString(GetValue("CompanyStreet"), @"");
			}
			set
			{
				SetValue("CompanyStreet", value);
			}
		}


		/// <summary>
		/// City.
		/// </summary>
		[DatabaseField]
		public string CompanyCity
		{
			get
			{
				return ValidationHelper.GetString(GetValue("CompanyCity"), @"");
			}
			set
			{
				SetValue("CompanyCity", value);
			}
		}


		/// <summary>
		/// Country.
		/// </summary>
		[DatabaseField]
		public string CompanyCountry
		{
			get
			{
				return ValidationHelper.GetString(GetValue("CompanyCountry"), @"USA");
			}
			set
			{
				SetValue("CompanyCountry", value);
			}
		}


		/// <summary>
		/// Zip code.
		/// </summary>
		[DatabaseField]
		public string CompanyZipCode
		{
			get
			{
				return ValidationHelper.GetString(GetValue("CompanyZipCode"), @"");
			}
			set
			{
				SetValue("CompanyZipCode", value);
			}
		}


		/// <summary>
		/// Phone.
		/// </summary>
		[DatabaseField]
		public string CompanyPhone
		{
			get
			{
				return ValidationHelper.GetString(GetValue("CompanyPhone"), @"");
			}
			set
			{
				SetValue("CompanyPhone", value);
			}
		}


		/// <summary>
		/// Photo.
		/// </summary>
		[DatabaseField]
		public Guid ProductPhoto
		{
			get
			{
				return ValidationHelper.GetGuid(GetValue("ProductPhoto"), Guid.Empty);
			}
			set
			{
				SetValue("ProductPhoto", value);
			}
		}


		/// <summary>
		/// Additional notes.
		/// </summary>
		[DatabaseField]
		public string ProductDescription
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ProductDescription"), @"");
			}
			set
			{
				SetValue("ProductDescription", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with Product fields.
		/// </summary>
		[RegisterProperty]
		public ProductFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with Product fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class ProductFields : AbstractHierarchicalObject<ProductFields>
		{
			/// <summary>
			/// The content item of type Product that is a target of the extended API.
			/// </summary>
			private readonly Product mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="ProductFields" /> class with the specified content item of type Product.
			/// </summary>
			/// <param name="instance">The content item of type Product that is a target of the extended API.</param>
			public ProductFields(Product instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// CafeID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.ProductID;
				}
				set
				{
					mInstance.ProductID = value;
				}
			}


			/// <summary>
			/// Name.
			/// </summary>
			public string Name
			{
				get
				{
					return mInstance.ProductName;
				}
				set
				{
					mInstance.ProductName = value;
				}
			}


			/// <summary>
			/// Company Name.
			/// </summary>
			public string CompanyName
			{
				get
				{
					return mInstance.CompanyName;
				}
				set
				{
					mInstance.CompanyName = value;
				}
			}


			/// <summary>
			/// Street.
			/// </summary>
			public string CompanyStreet
			{
				get
				{
					return mInstance.CompanyStreet;
				}
				set
				{
					mInstance.CompanyStreet = value;
				}
			}


			/// <summary>
			/// City.
			/// </summary>
			public string CompanyCity
			{
				get
				{
					return mInstance.CompanyCity;
				}
				set
				{
					mInstance.CompanyCity = value;
				}
			}


			/// <summary>
			/// Country.
			/// </summary>
			public string CompanyCountry
			{
				get
				{
					return mInstance.CompanyCountry;
				}
				set
				{
					mInstance.CompanyCountry = value;
				}
			}


			/// <summary>
			/// Zip code.
			/// </summary>
			public string CompanyZipCode
			{
				get
				{
					return mInstance.CompanyZipCode;
				}
				set
				{
					mInstance.CompanyZipCode = value;
				}
			}


			/// <summary>
			/// Phone.
			/// </summary>
			public string CompanyPhone
			{
				get
				{
					return mInstance.CompanyPhone;
				}
				set
				{
					mInstance.CompanyPhone = value;
				}
			}


			/// <summary>
			/// Photo.
			/// </summary>
			public DocumentAttachment Photo
			{
				get
				{
					return mInstance.GetFieldDocumentAttachment("ProductPhoto");
				}
			}


			/// <summary>
			/// Additional notes.
			/// </summary>
			public string Description
			{
				get
				{
					return mInstance.ProductDescription;
				}
				set
				{
					mInstance.ProductDescription = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="Product" /> class.
		/// </summary>
		public Product() : base(CLASS_NAME)
		{
			mFields = new ProductFields(this);
		}

		#endregion
	}
}